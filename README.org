Introduction to Deep Learning in R

By Toby Dylan Hocking.

** Installation instructions

[[https://cloud.r-project.org/banner.shtml][Download]] the most recent release of R (4.2.3).

Download an IDE that supports R. 
- If you already use emacs, try [[https://ess.r-project.org/][Emacs Speaks Statistics]], see [[https://www.youtube.com/playlist?list=PLwc48KSH3D1Onsed66FPLywMSIQmAhUYJ][my video
  screencasts which show how to install emacs and configure
  ESS]], or [[https://plantarum.ca/2020/12/30/emacs-tutorial-03/][this written tutorial]].
- Otherwise, a good IDE for beginners is [[https://posit.co/download/rstudio-desktop/][RStudio]].

Then, run the following R code to install the required packages.

#+begin_src R
  install.packages(c("data.table", "R.utils", "ggplot2", "torch"))
  torch::torch_tensor(pi)
#+end_src

If torch has been installed properly, you should see the following output:

#+begin_src R
> torch::torch_tensor(pi)
torch_tensor
 3.1416
[ CPUFloatType{1} ]
#+end_src

** April 2025 talk at Toulouse RUG

Slides:
[[file:HOCKING-slides-TRUG.tex]] makes [[file:HOCKING-slides-TRUG.pdf]]

Figures at the end of the slides were computed using code from
[[file:HOCKING-slides-TRUG.R]], which caches results for figures to CSV files:

[[file:2025-04-04-nnet_prop0.01.csv]] makes

[[file:2025-04-04-nnet_prop0.01-test-auc.png]]

[[file:2025-04-04-nnet_prop0.01_history.csv]] makes

[[file:2025-04-04-nnet_prop0.01-train-auc.png]]

To re-do the train/test error calculations, you need to first create
CSV files for the MNIST data sets using [[https://github.com/tdhock/cv-same-other-paper/blob/main/data_Classif_vision_simple.py][this python script]]. Then
create balanced/unbalanced subset assignments in
data_Classif_unbalanced/*.csv files [[https://tdhock.github.io/blog/2025/unbalanced/][using the code from this blog]].
[[file:data_Classif_unbalanced.tgz][Local tgv archive]].

** 19 April 2023 workshop

A 2 hour workshop for the [[https://researchbazaar.arizona.edu/resbaz/Arizona2023/][ResBaz AZ (Research Bazaar Arizona) 2023]].

We will start by discussing concepts on
[[file:HOCKING-slides-short.pdf][Slides PDF]], [[file:HOCKING-slides-short.tex][LaTeX source]], adapted from [[https://github.com/tdhock/2020-yiqi-summer-school#prepared-for-the-summer-school-4th-year-2021][ML Intro from Land Carbon
Modeling Summer School]].

Afterward we will show a demo of R code: [[file:2023-04-19-deep-learning.Rmd][source]], [[https://rcdata.nau.edu/genomic-ml/2023-res-baz-az/2023-04-19-deep-learning.html][rendered]].

See also: [[https://skeydan.github.io/Deep-Learning-and-Scientific-Computing-with-R-torch/][Deep Learning and Scientific Computing with R torch]] by
Sigrid Keydana.

** Interactive visualizations of gradient descent learning

*** Gradient descent for regression with one input feature
[[file:figure-grad-desc-regression.PNG]]
[[https://rcdata.nau.edu/genomic-ml/animint-gallery/2022-02-02-gradient-descent-regression/index.html][Interactive viz]], [[https://github.com/tdhock/cs570-spring-2022/blob/969c42e6e6a704271c330bbf9424dfd50753e8bc/figure-gradient-descent-regression.R][source]].

*** Gradient descent for binary classification with two input features
[[file:figure-linear-neural-learning.PNG]]
[[https://rcdata.nau.edu/genomic-ml/animint-gallery/2023-01-30-neural-networks-sim/index.html][Interactive viz]], [[https://github.com/tdhock/animint-book/blob/7e7a224c004843d42a6f7e6caa30e319bcdce901/Ch18-neural-networks-sim.R][source]].



